import { PartialDeep } from "type-fest";
import { PartialConfig } from "./config.js";
import { WalletPosition } from "./iframe/position.js";
export declare type MashSettings = {
    id: string;
    position: PartialDeep<WalletPosition>;
};
declare class Mash {
    private api;
    private iframe;
    private initialized;
    private config;
    private positionPromise;
    constructor(config: PartialConfig);
    private static hasValidAutopayAuthorization;
    private _init;
    init(settings?: MashSettings): Promise<null>;
    /**
     * Request access for given resource. If users does not have access it will trigger
     * payment flow.
     * @param resourceID Unique resource ID
     * @returns boolean
     */
    access(resourceID: string): Promise<boolean>;
    /**
     * @deprecated use .access()
     */
    hasAccess(resourceID: string): Promise<boolean>;
    /**
     * Trigger donation flow for user
     * @returns void
     */
    donate(): Promise<void>;
    /**
     * Determine if user has a valid budget configured for the current site
     * @param resourceID Unique resource ID
     * @returns boolean
     */
    userHasValidBudget(resourceID: string): Promise<boolean>;
    /**
     * Check if the wallet is initialized on the current page
     * @returns boolean
     */
    isReady(): boolean;
    private mount;
}
export default Mash;
//# sourceMappingURL=Mash.d.ts.map